name: Deploy to Hostinger

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-postpilot
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Hostinger
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start ssh-agent and add private key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure known_hosts for the server (adds host key)
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.HOSTINGER_HOST }}" >> ~/.ssh/known_hosts || true
        env:
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}

      - name: "Configure SSH"
        env:
            SSH_USER: ${{ secrets.HOSTINGER_USER }}
            SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_HOST: ${{ secrets.HOSTINGER_HOST }}
            SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
            mkdir -p ~/.ssh/
            printf "%s\n" "$SSH_KEY" > ~/.ssh/external-machine.key
            chmod 600 ~/.ssh/external-machine.key

            # escreve config de forma segura (sem heredoc indentado)
            printf "Host external-machine\n  HostName %s\n  User %s\n  Port %s\n  IdentityFile ~/.ssh/external-machine.key\n  StrictHostKeyChecking no\n" \
              "$SSH_HOST" "$SSH_USER" "$SSH_PORT" > ~/.ssh/config
            chmod 600 ~/.ssh/config

      - name: Remote deploy (VIA SSH)
        env:
            DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          # -tt aloca um TTY mesmo que n√£o haja um terminal interactivo
          ssh -tt external-machine "cd ${DEPLOY_PATH} && bin/deploy"
          echo "Deploy finalizado com sucesso!"